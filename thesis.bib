@inproceedings{vallee1999soot,
  title={Soot-a Java bytecode optimization framework},
  author={Vall{\'e}e-Rai, Raja and Co, Phong and Gagnon, Etienne and Hendren, Laurie and Lam, Patrick and Sundaresan, Vijay},
  booktitle={Proceedings of the 1999 conference of the Centre for Advanced Studies on Collaborative research},
  pages={13},
  year={1999},
  organization={IBM Press}
}

@inproceedings{Reynolds:2002:SLL:645683.664578,
 author = {Reynolds, John C.},
 title = {Separation Logic: A Logic for Shared Mutable Data Structures},
 booktitle = {Proceedings of the 17th Annual IEEE Symposium on Logic in Computer Science},
 series = {LICS '02},
 year = {2002},
 isbn = {0-7695-1483-9},
 pages = {55--74},
 numpages = {20},
 url = {http://dl.acm.org/citation.cfm?id=645683.664578},
 acmid = {664578},
 publisher = {IEEE Computer Society},
 address = {Washington, DC, USA},
} 

@article{Calcagno:2009:CSA:1594834.1480917,
 author = {Calcagno, Cristiano and Distefano, Dino and O'Hearn, Peter and Yang, Hongseok},
 title = {Compositional Shape Analysis by Means of Bi-abduction},
 journal = {SIGPLAN Not.},
 issue_date = {January 2009},
 volume = {44},
 number = {1},
 month = jan,
 year = {2009},
 issn = {0362-1340},
 pages = {289--300},
 numpages = {12},
 url = {http://doi.acm.org/10.1145/1594834.1480917},
 doi = {10.1145/1594834.1480917},
 acmid = {1480917},
 publisher = {ACM},
 address = {New York, NY, USA},
 keywords = {abduction, program analysis, proof theory},
} 

@Misc{fbinfer,
 title={Infer, a static analysis tool based on separation logic and bi-abduction},
 url={\url{http://fbinfer.com/docs/separation-logic-and-bi-abduction.html}},
 note={\url{http://fbinfer.com/docs/separation-logic-and-bi-abduction.html}}
 }  
 
@Misc{tpdb,
title={Termination Problem Data Base},
url={\url{http://cl2-informatik.uibk.ac.at/mercurial.cgi/TPDB}},
note={\url{http://cl2-informatik.uibk.ac.at/mercurial.cgi/TPDB}}
}

@Misc{github-testcases,
title={Test cases for evaluation},
url={\url{https://github.com/KaneTW/bachelor-thesis-testcases}},
note={\url{https://github.com/KaneTW/bachelor-thesis-testcases}}
}
 
 @inproceedings{automated-termination-proofs-for-java-bytecode-with-cyclic-data,
author = {Brockschmidt, Marc and Musiol, Richard and Otto, Carsten and Giesl, Juergen},
title = {Automated Termination Proofs for Java Bytecode with Cyclic Data},
booktitle = {CAV},
year = {2012},
month = {January},
abstract = {

In earlier work, we developed a technique to prove termination of Java programs automatically: first, Java programs are automatically transformed to term rewrite systems (TRSs) and then, existing methods and tools are used to prove termination of the resulting TRSs. In this paper, we extend our technique in order to prove termination of algorithms on cyclic data such as cyclic lists or graphs automatically. We implemented our technique in the tool AProVE and performed extensive experiments to evaluate its practical applicability.


},
publisher = {},
url = {https://www.microsoft.com/en-us/research/publication/automated-termination-proofs-for-java-bytecode-with-cyclic-data/},
address = {},
pages = {},
journal = {},
volume = {},
chapter = {},
isbn = {},
}                                                                                                     

@article{DBLP:journals/scp/ScapinS14,
  author    = {Enrico Scapin and
               Fausto Spoto},
  title     = {Field-sensitive unreachability and non-cyclicity analysis},
  journal   = {Sci. Comput. Program.},
  volume    = {95},
  pages     = {359--375},
  year      = {2014},
  url       = {http://dx.doi.org/10.1016/j.scico.2014.03.012},
  doi       = {10.1016/j.scico.2014.03.012},
  timestamp = {Fri, 21 Nov 2014 14:17:03 +0100},
  biburl    = {http://dblp.uni-trier.de/rec/bib/journals/scp/ScapinS14},
  bibsource = {dblp computer science bibliography, http://dblp.org}
}

@article{GenaimZ13,
  author = {Samir Genaim and Damiano Zanardini},
  title = {{R}eachability-based {A}cyclicity {A}nalysis by {A}bstract {I}nterpretation},
  journal = {Theoretical Computer Science},
  volume = 474,
  year = 2013,
  pages = {60-79},
  issn = {0304-3975},
  publisher = {Elsevier},
  doi = {10.1016/j.tcs.2012.12.018}
}

@inproceedings{lhot.hend03,
  author = "Ond\v{r}ej Lhot\'ak and Laurie Hendren",
  title = "Scaling {Java} Points-to Analysis Using {Spark}",
  booktitle =    {Compiler Construction, 12th International Conference},
  pages =        {153--169},
  month =        {April},
  year =         {2003},
  editor =       {G. Hedin},
  volume =       {2622},
  series =       {LNCS},
  address =      {Warsaw, Poland},
  publisher = {Springer},
}

@article{Heinen2015157,
title = "Verifying pointer programs using graph grammars ",
journal = "Science of Computer Programming ",
volume = "97, Part 1",
number = "",
pages = "157 - 162",
year = "2015",
note = "Special Issue on New Ideas and Emerging Results in Understanding Software ",
issn = "0167-6423",
doi = "http://dx.doi.org/10.1016/j.scico.2013.11.012",
url = "http://www.sciencedirect.com/science/article/pii/S0167642313002967",
author = "Jonathan Heinen and Christina Jansen and Joost-Pieter Katoen and Thomas Noll",
keywords = "Hyperedge replacement grammars",
keywords = "Java bytecode",
keywords = "Dynamic data structures",
keywords = "Verification "
}

@inproceedings{sharing-analysis-arrays-collections-recursive-structures,
author = {Marron, Mark and , Mario MÃ©ndez-Lojo and , Manuel Hermenegildo and , Darko Stefanovic and , Deepak Kapur},
title = {Sharing Analysis of Arrays, Collections, and Recursive Structures},
booktitle = {},
year = {2008},
month = {November},
abstract = {Precise modeling of the program heap is fundamental for understanding the behavior of a program, and is thus of significant interest for many optimization applications. One of the fundamental properties of the heap that can be used in a range of optimization techniques is the sharing relationships between the elements in an array or collection. If an analysis can determine that the memory locations pointed to by different entries of an array (or collection) are disjoint, then in many cases loops that traverse the array can be vectorized or transformed into a thread-parallel version. This paper introduces several novel sharing properties over the concrete heap and corresponding abstractions to represent them. In conjunction with an existing shape analysis technique, these abstractions allow us to precisely resolve the sharing relations in a wide range of heap structures (arrays, collections, recursive data structures, composite heap structures) in a computationally efficient manner. The effectiveness of the approach is evaluated on a set of challenge problems from the JOlden and SPECjvm98 suites. Sharing information obtained from the analysis is used to achieve substantial thread-level parallel speedups.},
publisher = {Association for Computing Machinery},
url = {https://www.microsoft.com/en-us/research/publication/sharing-analysis-arrays-collections-recursive-structures/},
address = {},
pages = {43-49},
journal = {},
volume = {},
chapter = {},
isbn = {},
}

@INPROCEEDINGS{6494978, 
author={Y. Sui and Y. Li and J. Xue}, 
booktitle={Proceedings of the 2013 IEEE/ACM International Symposium on Code Generation and Optimization (CGO)}, 
title={Query-directed adaptive heap cloning for optimizing compilers}, 
year={2013}, 
pages={1-11}, 
keywords={C language;optimising compilers;public domain software;query processing;C applications;FULCRA;KLOC;O2;Open64;QUDA heap cloning;SPEC2000 C benchmarks;abstract heap object cloning;heap-intensive programs;k-callsite-sensitive heap cloning;optimizing compilers;pointer analysis;query answering;query-directed adaptive heap cloning;Abstracts;Cloning;Computer languages;Context;Optimizing compilers;Resource management;Pointer analysis;heap cloning}, 
doi={10.1109/CGO.2013.6494978}, 
month={Feb},}

@inproceedings{Steensgaard:1996:PAA:237721.237727,
 author = {Steensgaard, Bjarne},
 title = {Points-to Analysis in Almost Linear Time},
 booktitle = {Proceedings of the 23rd ACM SIGPLAN-SIGACT Symposium on Principles of Programming Languages},
 series = {POPL '96},
 year = {1996},
 isbn = {0-89791-769-3},
 location = {St. Petersburg Beach, Florida, USA},
 pages = {32--41},
 numpages = {10},
 url = {http://doi.acm.org/10.1145/237721.237727},
 doi = {10.1145/237721.237727},
 acmid = {237727},
 publisher = {ACM},
 address = {New York, NY, USA},
} 

@article{Bacon:1996:FSA:236338.236371,
 author = {Bacon, David F. and Sweeney, Peter F.},
 title = {Fast Static Analysis of C++ Virtual Function Calls},
 journal = {SIGPLAN Not.},
 issue_date = {Oct. 1996},
 volume = {31},
 number = {10},
 month = oct,
 year = {1996},
 issn = {0362-1340},
 pages = {324--341},
 numpages = {18},
 url = {http://doi.acm.org/10.1145/236338.236371},
 doi = {10.1145/236338.236371},
 acmid = {236371},
 publisher = {ACM},
 address = {New York, NY, USA},
} 

@article{Sundaresan:2000:PVM:354222.353189,
 author = {Sundaresan, Vijay and Hendren, Laurie and Razafimahefa, Chrislain and Vall{\'e}e-Rai, Raja and Lam, Patrick and Gagnon, Etienne and Godin, Charles},
 title = {Practical Virtual Method Call Resolution for Java},
 journal = {SIGPLAN Not.},
 issue_date = {Oct. 2000},
 volume = {35},
 number = {10},
 month = oct,
 year = {2000},
 issn = {0362-1340},
 pages = {264--280},
 numpages = {17},
 url = {http://doi.acm.org/10.1145/354222.353189},
 doi = {10.1145/354222.353189},
 acmid = {353189},
 publisher = {ACM},
 address = {New York, NY, USA},
} 